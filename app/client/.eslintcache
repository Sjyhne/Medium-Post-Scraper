[{"/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/index.tsx":"1","/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/reportWebVitals.ts":"2","/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/components/App.tsx":"3","/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/components/Posts.tsx":"4","/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/components/Post.tsx":"5"},{"size":558,"mtime":1610832668864,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1610827532659,"results":"8","hashOfConfig":"7"},{"size":276,"mtime":1610828226901,"results":"9","hashOfConfig":"7"},{"size":633,"mtime":1610832139661,"results":"10","hashOfConfig":"7"},{"size":792,"mtime":1610832588456,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18b3x9w",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/index.tsx",[],"/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/reportWebVitals.ts",[],["24","25"],"/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/components/App.tsx",[],"/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/components/Posts.tsx",["26","27"],"import React, {useState, useEffect} from 'react';\nimport Post from \"./Post\"\nimport '../css/App.css';\n\nfunction Posts() {\n\n  const [allArticles, setAllArticles]Â = useState([]);\n\n  useEffect(() => {\n    if (allArticles.length == 0) {\n      fetch(\"/posts\").then(res => res.json()).then(data => {\n        setAllArticles(data)\n      })\n    }\n  }, []);\n\n  console.log(allArticles)\n\n  console.log(allArticles.length)\n\n  return (\n    <div>\n      <p>Articles</p>\n      <div>{allArticles.map(function(item: any) {\n        return <Post key={item.articleTitle} postData={item} />\n      })}\n      </div>\n    </div>\n  );\n}\n\nexport default Posts;\n","/home/sjyhne/projects/python/scraping/Medium-Post-Scraper/app/client/src/components/Post.tsx",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":10,"column":28,"nodeType":"34","messageId":"35","endLine":10,"endColumn":30},{"ruleId":"36","severity":1,"message":"37","line":15,"column":6,"nodeType":"38","endLine":15,"endColumn":8,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allArticles.length'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [allArticles.length]",{"range":"45","text":"46"},[342,344],"[allArticles.length]"]